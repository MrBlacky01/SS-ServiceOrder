@model ServiceOrder.ViewModel.ViewModels.Implementation.AccountViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

<h3 class="form-signin-heading">Please input register information</h3>

<div class="container">
    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-register", role = "form" }))
    {
        @Html.AntiForgeryToken()
        
        <br />
        
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control ", placeholder="Name" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    
        
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control " ,placeholder = "Email"} })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
       
        
        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

        <div class="checkbox">
            @Html.CheckBoxFor(model => model.IsServiceProvider)
            @Html.LabelFor(model => model.IsServiceProvider)
        </div>
            
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <br/>
        <button class="btn btn-lg btn-primary btn-block" type="submit">Register</button>
    }
        </div>



@*using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsServiceProvider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsServiceProvider)
                    @Html.ValidationMessageFor(model => model.IsServiceProvider, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
