@model  ServiceOrder.ViewModel.ViewModels.Implementation.ServiceTypeViewModels.ServiceTypeViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create new Service Type</h2>

<div class="row">
    @using (Html.BeginForm("Create", "ServiceType", FormMethod.Post, new { @class = "create-service-type-form col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-8 col-xs-12" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
           
            <div >
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Service Type Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div >
                @Html.DropDownListFor(m => m.Category.Id, // 1. Store selected value in Model.State;
                                                      // when page is rendered after postback,
                                                      // take selected value from Model.State.

                    // 2. Take list of values from Model.States
                    Model.Categories,

                    // 3. Text for the first 'default' option
                    " Please select a category ",

                    //4. A class name to assign to <select> tag
                    new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Category.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="submit" value="Create" class="btn btn-default" />

    }
</div>


<div>
    @Html.ActionLink("Back to List", "Index",null,new {@class="btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
