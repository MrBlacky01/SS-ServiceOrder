@model ServiceOrder.ViewModel.ViewModels.Implementation.ServiceProvidersViewModels.ServiceProviderCategoryViewModel

@{
    ViewBag.Title = "AddCategory";
}

<h2>AddCategory</h2>

<span id="notification" style="display: none;"></span>

@using (Html.BeginForm("AddRegion", "ServiceProviders", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Categories</h4>
        <input id="category" value="1" style="width: 100%;" />
    </div>

    <div class="form-horizontal">
        <h4>Services</h4>
        <select id="services"></select>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Manage", "Manage")
</div>

<script id="errorTemplate" type="text/x-kendo-template">
    <div class="error-notification">
        <img src="http://demos.telerik.com/kendo-ui/content/web/notification/error-icon.png" />
        <h3>#= title #</h3>
        <p>#= message #</p>
    </div>
</script>

<script id="successTemplate" type="text/x-kendo-template">
    <div class="success-notification">
        <img src="http://demos.telerik.com/kendo-ui/content/web/notification/success-icon.png" />
        <h3>#= message #</h3>
    </div>
</script>

<script>
    $(document).ready(function () {

        var allCategories = @(Html.Raw(Json.Encode(Model.Categories)));

        var notification = $("#notification").kendoNotification({
            position: {
                pinned: true,
                top: 50,
                right: 30
            },
            autoHideAfter: 5000,
            stacking: "down",
            templates: [{
                type: "error",
                template: $("#errorTemplate").html()
            }, {
                type: "success",
                template: $("#successTemplate").html()
            }]
        }).data("kendoNotification");

        $("#category").kendoDropDownList({
            dataTextField: "Title",
            dataValueField: "Id",
            dataSource: allCategories,
            index: 0,
            change: onChange
        });

        $("#services").kendoMultiSelect({
            placeholder: "Select service",
            dataTextField: "Title",
            dataValueField: "Id",
            noDataTemplate: 'No Data in this category'
        });
        

        var multiselect = $("#services").data("kendoMultiSelect");
        var dropdownlist = $("#category").data("kendoDropDownList");

        firstLoad();

        $('input:submit').click(function (event) {
            event.preventDefault();
            $.ajax({
                url: '/ServiceProviders/AddServices',
                type: 'POST',
                data: {services : JSON.stringify( multiselect.dataItems()),category:JSON.stringify(dropdownlist.dataItem())},
                success: function () {
                    notification.show({
                        message: "Success add Service"
                    }, "success");
                },
                error: function (error) {
                    notification.show({
                        title: "Error",
                        message: error.statusText
                    }, "error");
                }
            });
        });

        function onChange() {
            sendServicesLoadAjax(dropdownlist.dataItem());
        };

        function firstLoad() {
            sendServicesLoadAjax(dropdownlist.dataItem(0));
        }

        function sendServicesLoadAjax(category) {
            $.ajax({
                url: '/ServiceProviders/GetCategoryServices',
                type: 'GET',
                data: {Title: category.Title, Id: category.Id},
                success: function (data) {
                    multiselect.setDataSource([]);
                    var obj = JSON.parse(data.dataAll);
                    obj.forEach(function(item, i, arr) {
                        multiselect.dataSource.add({Title : item.Title, Id : item.Id});
                    });
                    var e = new Array();
                    var chooseIndex = JSON.parse(data.chooseData);
                    chooseIndex.forEach(function(item, i, arr) {
                        e.push(obj[item]);
                    });
                    multiselect.value( e);
                },
                error: function (error) {
                    notification.show({
                        title: "Error",
                        message: error.statusText
                    }, "error");
                }
            });
        }
    });
</script>