@model   ServiceOrder.ViewModel.ViewModels.Implementation.Order.OrderViewModel 
@{
    ViewBag.Title = "Index";
}


<text>You want to make order of @Model.ProviderName provider. Please fill order data</text>
<br/>

<form class="form-horizontal">

    <div class="row top-buffer"> 
        <div class="col-md-offset-4 col-sm-offset-3">
            @Html.LabelFor(m => m.Date, new { @class = "col-md-2 col-sm-3 col-xs-5 control-label" })
            @Html.EditorFor(m => m.Date)
        </div>            
    </div>

    <div class="row top-buffer">
        <div class="col-md-offset-4 col-sm-offset-3">
            @Html.LabelFor(m => m.BeginTime, new { @class = "col-md-2 col-sm-3 col-xs-5 control-label" })
            @Html.EditorFor(m => m.BeginTime)
        </div>            
    </div>

    <div class="row top-buffer ">
        <div class="col-md-offset-4 col-sm-offset-3 ">
            @Html.LabelFor(m => m.EndTime, new { @class = "col-md-2 col-sm-3 col-xs-5 control-label .center-align" })
            @Html.EditorFor(m => m.EndTime)
        </div> 
    </div>
    
    <div class="row top-buffer ">
        <div class="col-md-offset-2 col-sm-offset-1">
            @Html.LabelFor(m => m.Regions, new { @class = "col-md-2 col-sm-3 col-xs-4 control-label .center-align" })
            <div class="col-md-6 col-sm-8">
                <input id="region" value="1"  style="width: 100%" />
            </div>
        </div>
    </div>
    
    <div class="row top-buffer ">
        <div class="col-md-offset-2 col-sm-offset-1">
            @Html.LabelFor(m => m.Categories, new { @class = "col-md-2 col-sm-3 col-xs-4 control-label .center-align" })
            <div class="col-md-6 col-sm-8">
                <input id="category" value="1" style="width: 100%" />
            </div>            
        </div>        
    </div>
    
    <div class="row top-buffer ">
        <div class="col-md-offset-2 col-sm-offset-1">
            <label for="service" class="col-md-2 col-sm-3 col-xs-4 control-label .center-align">Services</label>
            <div class="col-md-6 col-sm-8">
                <input id="service" value="1" style="width: 100%" />
            </div>            
        </div>        
    </div>

    <div class="col-md-offset-2 col-md-10" style="margin-top: 10px">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
</form>

<script>

    $(document).ready(function () {

        var datePicker = $('#Date')
            .kendoDatePicker({
                value: new Date(),
                min: new Date(),
                max: new Date(new Date().setFullYear(new Date().getFullYear() + 1)),
                disableDates: ["sa", "su"],
                format: "dd/MM/yyyy",
            })
            .data("kendoDatePicker");

        var startTimePicker = $("#BeginTime")
            .kendoTimePicker({
                format: "HH:mm",
                min: new Date(2000, 0, 1, 8, 0, 0),
                max: new Date(2000, 0, 1, 21, 0, 0),
                value: new Date(2011, 0, 1, 8, 0),
                interval: 60,
                change: startChange
            }).data("kendoDatePicker");

        var endTimePicker = $('#EndTime').kendoTimePicker({
            format: "HH:mm",
            min: new Date(2000, 0, 1, 9, 0, 0),
            max: new Date(2000, 0, 1, 22, 0, 0),
            value: new Date(2011, 0, 1, 9, 0),
            interval: 60
        }).data("kendoTimePicker");

        var providerRegions = @(Html.Raw(Json.Encode(Model.Regions)));

        var regionDropDownList = $('#region')
            .kendoDropDownList({
                dataTextField: "Title",
                dataValueField: "Id",
                dataSource: providerRegions,
                index: 0
            })
        .data("kendoDropDownList");

        var providerCategories = @(Html.Raw(Json.Encode(Model.Categories)));

        var categoryDropDownList = $('#category')
            .kendoDropDownList({
                dataTextField: "Title",
                dataValueField: "Id",
                dataSource: providerCategories,
                index: 0,
                change: onChange
            })
            .data("kendoDropDownList");

        firstLoad();

        var serviceDropDownList = $('#service')
            .kendoDropDownList({
                dataTextField: "Title",
                dataValueField: "Id"
            })
            .data("kendoDropDownList");

        function startChange() {

        }

        function onChange() {
            sendAjaxLoadServices(categoryDropDownList.dataItem());
        };

        function firstLoad() {
            sendAjaxLoadServices(categoryDropDownList.dataItem(0));
        }

        function sendAjaxLoadServices(category) {
            $.ajax({
                url: '/Order/GetProviderServicesByCategory',
                type: 'GET',
                data: {categoryId: category.Id, providerId : "@Model.ServiceProviderId"},
                success: function (data) {
                    serviceDropDownList.setDataSource([]);
                    var obj = JSON.parse(data.services);
                    obj.forEach(function(item, i, arr) {
                        serviceDropDownList.dataSource.add({Title : item.Title, Id : item.Id});
                    });
                    serviceDropDownList.select(0);
                },
                error: function (error) {
                    alert('error');
                }
            });
        }
    });


</script>

