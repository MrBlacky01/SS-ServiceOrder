@model PagedList.IPagedList<ServiceOrder.ViewModel.ViewModels.Implementation.Order.OrderViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "My Orders";
}

<h2>Provider Orders</h2>

<table class="table">
    <tr class="table-header-tr">
        <th>
            @Html.ActionLink("Order Date", "ProviderOrders", new { sortOrder = ViewBag.DateSort }) 
        </th>
        <th>
            @Html.ActionLink("Client Name", "ProviderOrders", new { sortOrder = ViewBag.ClientNameSort }) 
        </th>
        <th>
            BeginTime
        </th>
        <th>
            EndTime
        </th>
        <th>
            @Html.ActionLink("Region", "ProviderOrders", new { sortOrder = ViewBag.RegionSort }) 
        </th>
        <th>
            @Html.ActionLink("Service Type", "ProviderOrders", new { sortOrder = ViewBag.ServiceTypeSort }) 
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BeginTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Region.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ServiceType.Title)
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("ProviderOrders", new { page, sortOrder = ViewBag.CurrentSort}))