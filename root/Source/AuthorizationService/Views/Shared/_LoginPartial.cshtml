@using AuthorizationService.IdentityServer.Account
@using AuthorizationService.Models.UserData
@inject SignInManager<AuthorizationServiceUser> SignInManager
@inject UserManager<AuthorizationServiceUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    if (Model == null || Model.GetType() != typeof(LoginViewModel))
    {
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
            <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
        </ul>
    }
    else
    {
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Register" asp-route-returnurl="@Model.ReturnUrl">Register</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnurl="@Model.ReturnUrl">Log in</a></li>
    </ul>
    }

}
